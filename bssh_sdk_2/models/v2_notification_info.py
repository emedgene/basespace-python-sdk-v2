# coding: utf-8

"""
    Basespace API

    Basespace REST API  # noqa: E501

    OpenAPI spec version: 5.0.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V2NotificationInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'stream': 'str',
        'href_content': 'str',
        'title_html': 'str',
        'name': 'str',
        'description': 'str',
        'app_session_elapsed_time': 'int',
        'percent_pf': 'float',
        'percent_gt_q30': 'float',
        'invite_type': 'str',
        'invite_token': 'str',
        'notification_severity': 'str',
        'is_dismissable': 'bool'
    }

    attribute_map = {
        'type': 'Type',
        'stream': 'Stream',
        'href_content': 'HrefContent',
        'title_html': 'TitleHtml',
        'name': 'Name',
        'description': 'Description',
        'app_session_elapsed_time': 'AppSessionElapsedTime',
        'percent_pf': 'PercentPf',
        'percent_gt_q30': 'PercentGtQ30',
        'invite_type': 'InviteType',
        'invite_token': 'InviteToken',
        'notification_severity': 'NotificationSeverity',
        'is_dismissable': 'IsDismissable'
    }

    def __init__(self, type=None, stream=None, href_content=None, title_html=None, name=None, description=None, app_session_elapsed_time=None, percent_pf=None, percent_gt_q30=None, invite_type=None, invite_token=None, notification_severity=None, is_dismissable=None):  # noqa: E501
        """V2NotificationInfo - a model defined in Swagger"""  # noqa: E501
        self._type = None
        self._stream = None
        self._href_content = None
        self._title_html = None
        self._name = None
        self._description = None
        self._app_session_elapsed_time = None
        self._percent_pf = None
        self._percent_gt_q30 = None
        self._invite_type = None
        self._invite_token = None
        self._notification_severity = None
        self._is_dismissable = None
        self.discriminator = None
        if type is not None:
            self.type = type
        if stream is not None:
            self.stream = stream
        if href_content is not None:
            self.href_content = href_content
        if title_html is not None:
            self.title_html = title_html
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if app_session_elapsed_time is not None:
            self.app_session_elapsed_time = app_session_elapsed_time
        if percent_pf is not None:
            self.percent_pf = percent_pf
        if percent_gt_q30 is not None:
            self.percent_gt_q30 = percent_gt_q30
        if invite_type is not None:
            self.invite_type = invite_type
        if invite_token is not None:
            self.invite_token = invite_token
        if notification_severity is not None:
            self.notification_severity = notification_severity
        if is_dismissable is not None:
            self.is_dismissable = is_dismissable

    @property
    def type(self):
        """Gets the type of this V2NotificationInfo.  # noqa: E501


        :return: The type of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this V2NotificationInfo.


        :param type: The type of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def stream(self):
        """Gets the stream of this V2NotificationInfo.  # noqa: E501


        :return: The stream of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._stream

    @stream.setter
    def stream(self, stream):
        """Sets the stream of this V2NotificationInfo.


        :param stream: The stream of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._stream = stream

    @property
    def href_content(self):
        """Gets the href_content of this V2NotificationInfo.  # noqa: E501


        :return: The href_content of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._href_content

    @href_content.setter
    def href_content(self, href_content):
        """Sets the href_content of this V2NotificationInfo.


        :param href_content: The href_content of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._href_content = href_content

    @property
    def title_html(self):
        """Gets the title_html of this V2NotificationInfo.  # noqa: E501


        :return: The title_html of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._title_html

    @title_html.setter
    def title_html(self, title_html):
        """Sets the title_html of this V2NotificationInfo.


        :param title_html: The title_html of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._title_html = title_html

    @property
    def name(self):
        """Gets the name of this V2NotificationInfo.  # noqa: E501


        :return: The name of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V2NotificationInfo.


        :param name: The name of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this V2NotificationInfo.  # noqa: E501


        :return: The description of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V2NotificationInfo.


        :param description: The description of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def app_session_elapsed_time(self):
        """Gets the app_session_elapsed_time of this V2NotificationInfo.  # noqa: E501


        :return: The app_session_elapsed_time of this V2NotificationInfo.  # noqa: E501
        :rtype: int
        """
        return self._app_session_elapsed_time

    @app_session_elapsed_time.setter
    def app_session_elapsed_time(self, app_session_elapsed_time):
        """Sets the app_session_elapsed_time of this V2NotificationInfo.


        :param app_session_elapsed_time: The app_session_elapsed_time of this V2NotificationInfo.  # noqa: E501
        :type: int
        """

        self._app_session_elapsed_time = app_session_elapsed_time

    @property
    def percent_pf(self):
        """Gets the percent_pf of this V2NotificationInfo.  # noqa: E501


        :return: The percent_pf of this V2NotificationInfo.  # noqa: E501
        :rtype: float
        """
        return self._percent_pf

    @percent_pf.setter
    def percent_pf(self, percent_pf):
        """Sets the percent_pf of this V2NotificationInfo.


        :param percent_pf: The percent_pf of this V2NotificationInfo.  # noqa: E501
        :type: float
        """

        self._percent_pf = percent_pf

    @property
    def percent_gt_q30(self):
        """Gets the percent_gt_q30 of this V2NotificationInfo.  # noqa: E501


        :return: The percent_gt_q30 of this V2NotificationInfo.  # noqa: E501
        :rtype: float
        """
        return self._percent_gt_q30

    @percent_gt_q30.setter
    def percent_gt_q30(self, percent_gt_q30):
        """Sets the percent_gt_q30 of this V2NotificationInfo.


        :param percent_gt_q30: The percent_gt_q30 of this V2NotificationInfo.  # noqa: E501
        :type: float
        """

        self._percent_gt_q30 = percent_gt_q30

    @property
    def invite_type(self):
        """Gets the invite_type of this V2NotificationInfo.  # noqa: E501


        :return: The invite_type of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._invite_type

    @invite_type.setter
    def invite_type(self, invite_type):
        """Sets the invite_type of this V2NotificationInfo.


        :param invite_type: The invite_type of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._invite_type = invite_type

    @property
    def invite_token(self):
        """Gets the invite_token of this V2NotificationInfo.  # noqa: E501


        :return: The invite_token of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._invite_token

    @invite_token.setter
    def invite_token(self, invite_token):
        """Sets the invite_token of this V2NotificationInfo.


        :param invite_token: The invite_token of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._invite_token = invite_token

    @property
    def notification_severity(self):
        """Gets the notification_severity of this V2NotificationInfo.  # noqa: E501


        :return: The notification_severity of this V2NotificationInfo.  # noqa: E501
        :rtype: str
        """
        return self._notification_severity

    @notification_severity.setter
    def notification_severity(self, notification_severity):
        """Sets the notification_severity of this V2NotificationInfo.


        :param notification_severity: The notification_severity of this V2NotificationInfo.  # noqa: E501
        :type: str
        """

        self._notification_severity = notification_severity

    @property
    def is_dismissable(self):
        """Gets the is_dismissable of this V2NotificationInfo.  # noqa: E501


        :return: The is_dismissable of this V2NotificationInfo.  # noqa: E501
        :rtype: bool
        """
        return self._is_dismissable

    @is_dismissable.setter
    def is_dismissable(self, is_dismissable):
        """Sets the is_dismissable of this V2NotificationInfo.


        :param is_dismissable: The is_dismissable of this V2NotificationInfo.  # noqa: E501
        :type: bool
        """

        self._is_dismissable = is_dismissable

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V2NotificationInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2NotificationInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
