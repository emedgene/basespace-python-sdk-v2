# coding: utf-8

"""
    Basespace API

    Basespace REST API  # noqa: E501

    OpenAPI spec version: 5.0.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class StorageStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'unit': 'str',
        'quota': 'int',
        'total_size': 'int',
        'total_shared_size': 'int',
        'total_owned_size': 'int',
        'total_runs_size': 'int',
        'total_projects_size': 'int',
        'projects_owned_size': 'int',
        'projects_shared_size': 'int',
        'runs_owned_size': 'int',
        'runs_shared_size': 'int',
        'total_trash_size': 'int',
        'total_archived_size': 'int',
        'total_restored_size': 'int'
    }

    attribute_map = {
        'unit': 'Unit',
        'quota': 'Quota',
        'total_size': 'TotalSize',
        'total_shared_size': 'TotalSharedSize',
        'total_owned_size': 'TotalOwnedSize',
        'total_runs_size': 'TotalRunsSize',
        'total_projects_size': 'TotalProjectsSize',
        'projects_owned_size': 'ProjectsOwnedSize',
        'projects_shared_size': 'ProjectsSharedSize',
        'runs_owned_size': 'RunsOwnedSize',
        'runs_shared_size': 'RunsSharedSize',
        'total_trash_size': 'TotalTrashSize',
        'total_archived_size': 'TotalArchivedSize',
        'total_restored_size': 'TotalRestoredSize'
    }

    def __init__(self, unit=None, quota=None, total_size=None, total_shared_size=None, total_owned_size=None, total_runs_size=None, total_projects_size=None, projects_owned_size=None, projects_shared_size=None, runs_owned_size=None, runs_shared_size=None, total_trash_size=None, total_archived_size=None, total_restored_size=None):  # noqa: E501
        """StorageStatistics - a model defined in Swagger"""  # noqa: E501
        self._unit = None
        self._quota = None
        self._total_size = None
        self._total_shared_size = None
        self._total_owned_size = None
        self._total_runs_size = None
        self._total_projects_size = None
        self._projects_owned_size = None
        self._projects_shared_size = None
        self._runs_owned_size = None
        self._runs_shared_size = None
        self._total_trash_size = None
        self._total_archived_size = None
        self._total_restored_size = None
        self.discriminator = None
        if unit is not None:
            self.unit = unit
        if quota is not None:
            self.quota = quota
        if total_size is not None:
            self.total_size = total_size
        if total_shared_size is not None:
            self.total_shared_size = total_shared_size
        if total_owned_size is not None:
            self.total_owned_size = total_owned_size
        if total_runs_size is not None:
            self.total_runs_size = total_runs_size
        if total_projects_size is not None:
            self.total_projects_size = total_projects_size
        if projects_owned_size is not None:
            self.projects_owned_size = projects_owned_size
        if projects_shared_size is not None:
            self.projects_shared_size = projects_shared_size
        if runs_owned_size is not None:
            self.runs_owned_size = runs_owned_size
        if runs_shared_size is not None:
            self.runs_shared_size = runs_shared_size
        if total_trash_size is not None:
            self.total_trash_size = total_trash_size
        if total_archived_size is not None:
            self.total_archived_size = total_archived_size
        if total_restored_size is not None:
            self.total_restored_size = total_restored_size

    @property
    def unit(self):
        """Gets the unit of this StorageStatistics.  # noqa: E501


        :return: The unit of this StorageStatistics.  # noqa: E501
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this StorageStatistics.


        :param unit: The unit of this StorageStatistics.  # noqa: E501
        :type: str
        """

        self._unit = unit

    @property
    def quota(self):
        """Gets the quota of this StorageStatistics.  # noqa: E501

        The total amount of Data the user is permitted to use.  # noqa: E501

        :return: The quota of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """Sets the quota of this StorageStatistics.

        The total amount of Data the user is permitted to use.  # noqa: E501

        :param quota: The quota of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._quota = quota

    @property
    def total_size(self):
        """Gets the total_size of this StorageStatistics.  # noqa: E501


        :return: The total_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this StorageStatistics.


        :param total_size: The total_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_size = total_size

    @property
    def total_shared_size(self):
        """Gets the total_shared_size of this StorageStatistics.  # noqa: E501


        :return: The total_shared_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_shared_size

    @total_shared_size.setter
    def total_shared_size(self, total_shared_size):
        """Sets the total_shared_size of this StorageStatistics.


        :param total_shared_size: The total_shared_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_shared_size = total_shared_size

    @property
    def total_owned_size(self):
        """Gets the total_owned_size of this StorageStatistics.  # noqa: E501


        :return: The total_owned_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_owned_size

    @total_owned_size.setter
    def total_owned_size(self, total_owned_size):
        """Sets the total_owned_size of this StorageStatistics.


        :param total_owned_size: The total_owned_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_owned_size = total_owned_size

    @property
    def total_runs_size(self):
        """Gets the total_runs_size of this StorageStatistics.  # noqa: E501


        :return: The total_runs_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_runs_size

    @total_runs_size.setter
    def total_runs_size(self, total_runs_size):
        """Sets the total_runs_size of this StorageStatistics.


        :param total_runs_size: The total_runs_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_runs_size = total_runs_size

    @property
    def total_projects_size(self):
        """Gets the total_projects_size of this StorageStatistics.  # noqa: E501


        :return: The total_projects_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_projects_size

    @total_projects_size.setter
    def total_projects_size(self, total_projects_size):
        """Sets the total_projects_size of this StorageStatistics.


        :param total_projects_size: The total_projects_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_projects_size = total_projects_size

    @property
    def projects_owned_size(self):
        """Gets the projects_owned_size of this StorageStatistics.  # noqa: E501


        :return: The projects_owned_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._projects_owned_size

    @projects_owned_size.setter
    def projects_owned_size(self, projects_owned_size):
        """Sets the projects_owned_size of this StorageStatistics.


        :param projects_owned_size: The projects_owned_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._projects_owned_size = projects_owned_size

    @property
    def projects_shared_size(self):
        """Gets the projects_shared_size of this StorageStatistics.  # noqa: E501


        :return: The projects_shared_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._projects_shared_size

    @projects_shared_size.setter
    def projects_shared_size(self, projects_shared_size):
        """Sets the projects_shared_size of this StorageStatistics.


        :param projects_shared_size: The projects_shared_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._projects_shared_size = projects_shared_size

    @property
    def runs_owned_size(self):
        """Gets the runs_owned_size of this StorageStatistics.  # noqa: E501


        :return: The runs_owned_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._runs_owned_size

    @runs_owned_size.setter
    def runs_owned_size(self, runs_owned_size):
        """Sets the runs_owned_size of this StorageStatistics.


        :param runs_owned_size: The runs_owned_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._runs_owned_size = runs_owned_size

    @property
    def runs_shared_size(self):
        """Gets the runs_shared_size of this StorageStatistics.  # noqa: E501


        :return: The runs_shared_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._runs_shared_size

    @runs_shared_size.setter
    def runs_shared_size(self, runs_shared_size):
        """Sets the runs_shared_size of this StorageStatistics.


        :param runs_shared_size: The runs_shared_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._runs_shared_size = runs_shared_size

    @property
    def total_trash_size(self):
        """Gets the total_trash_size of this StorageStatistics.  # noqa: E501


        :return: The total_trash_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_trash_size

    @total_trash_size.setter
    def total_trash_size(self, total_trash_size):
        """Sets the total_trash_size of this StorageStatistics.


        :param total_trash_size: The total_trash_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_trash_size = total_trash_size

    @property
    def total_archived_size(self):
        """Gets the total_archived_size of this StorageStatistics.  # noqa: E501


        :return: The total_archived_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_archived_size

    @total_archived_size.setter
    def total_archived_size(self, total_archived_size):
        """Sets the total_archived_size of this StorageStatistics.


        :param total_archived_size: The total_archived_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_archived_size = total_archived_size

    @property
    def total_restored_size(self):
        """Gets the total_restored_size of this StorageStatistics.  # noqa: E501


        :return: The total_restored_size of this StorageStatistics.  # noqa: E501
        :rtype: int
        """
        return self._total_restored_size

    @total_restored_size.setter
    def total_restored_size(self, total_restored_size):
        """Sets the total_restored_size of this StorageStatistics.


        :param total_restored_size: The total_restored_size of this StorageStatistics.  # noqa: E501
        :type: int
        """

        self._total_restored_size = total_restored_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(StorageStatistics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, StorageStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
