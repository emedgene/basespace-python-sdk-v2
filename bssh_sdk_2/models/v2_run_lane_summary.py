# coding: utf-8

"""
    Basespace API

    Basespace REST API  # noqa: E501

    OpenAPI spec version: 5.0.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V2RunLaneSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'run_id': 'str',
        'href_base_space_ui': 'str',
        'experiment_name': 'str',
        'flowcell_barcode': 'str',
        'workflow': 'str',
        'date_modified': 'datetime',
        'run_status': 'str',
        'user_owned_by': 'V1pre3UserCompact',
        'lane_id': 'str',
        'lane_number': 'int',
        'lane_status': 'str',
        'library_name': 'str',
        'fast_q_status': 'str'
    }

    attribute_map = {
        'run_id': 'RunId',
        'href_base_space_ui': 'HrefBaseSpaceUI',
        'experiment_name': 'ExperimentName',
        'flowcell_barcode': 'FlowcellBarcode',
        'workflow': 'Workflow',
        'date_modified': 'DateModified',
        'run_status': 'RunStatus',
        'user_owned_by': 'UserOwnedBy',
        'lane_id': 'LaneId',
        'lane_number': 'LaneNumber',
        'lane_status': 'LaneStatus',
        'library_name': 'LibraryName',
        'fast_q_status': 'FastQStatus'
    }

    def __init__(self, run_id=None, href_base_space_ui=None, experiment_name=None, flowcell_barcode=None, workflow=None, date_modified=None, run_status=None, user_owned_by=None, lane_id=None, lane_number=None, lane_status=None, library_name=None, fast_q_status=None):  # noqa: E501
        """V2RunLaneSummary - a model defined in Swagger"""  # noqa: E501
        self._run_id = None
        self._href_base_space_ui = None
        self._experiment_name = None
        self._flowcell_barcode = None
        self._workflow = None
        self._date_modified = None
        self._run_status = None
        self._user_owned_by = None
        self._lane_id = None
        self._lane_number = None
        self._lane_status = None
        self._library_name = None
        self._fast_q_status = None
        self.discriminator = None
        if run_id is not None:
            self.run_id = run_id
        if href_base_space_ui is not None:
            self.href_base_space_ui = href_base_space_ui
        if experiment_name is not None:
            self.experiment_name = experiment_name
        if flowcell_barcode is not None:
            self.flowcell_barcode = flowcell_barcode
        if workflow is not None:
            self.workflow = workflow
        if date_modified is not None:
            self.date_modified = date_modified
        if run_status is not None:
            self.run_status = run_status
        if user_owned_by is not None:
            self.user_owned_by = user_owned_by
        if lane_id is not None:
            self.lane_id = lane_id
        if lane_number is not None:
            self.lane_number = lane_number
        if lane_status is not None:
            self.lane_status = lane_status
        if library_name is not None:
            self.library_name = library_name
        if fast_q_status is not None:
            self.fast_q_status = fast_q_status

    @property
    def run_id(self):
        """Gets the run_id of this V2RunLaneSummary.  # noqa: E501


        :return: The run_id of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._run_id

    @run_id.setter
    def run_id(self, run_id):
        """Sets the run_id of this V2RunLaneSummary.


        :param run_id: The run_id of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._run_id = run_id

    @property
    def href_base_space_ui(self):
        """Gets the href_base_space_ui of this V2RunLaneSummary.  # noqa: E501


        :return: The href_base_space_ui of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._href_base_space_ui

    @href_base_space_ui.setter
    def href_base_space_ui(self, href_base_space_ui):
        """Sets the href_base_space_ui of this V2RunLaneSummary.


        :param href_base_space_ui: The href_base_space_ui of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._href_base_space_ui = href_base_space_ui

    @property
    def experiment_name(self):
        """Gets the experiment_name of this V2RunLaneSummary.  # noqa: E501


        :return: The experiment_name of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._experiment_name

    @experiment_name.setter
    def experiment_name(self, experiment_name):
        """Sets the experiment_name of this V2RunLaneSummary.


        :param experiment_name: The experiment_name of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._experiment_name = experiment_name

    @property
    def flowcell_barcode(self):
        """Gets the flowcell_barcode of this V2RunLaneSummary.  # noqa: E501


        :return: The flowcell_barcode of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._flowcell_barcode

    @flowcell_barcode.setter
    def flowcell_barcode(self, flowcell_barcode):
        """Sets the flowcell_barcode of this V2RunLaneSummary.


        :param flowcell_barcode: The flowcell_barcode of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._flowcell_barcode = flowcell_barcode

    @property
    def workflow(self):
        """Gets the workflow of this V2RunLaneSummary.  # noqa: E501


        :return: The workflow of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow):
        """Sets the workflow of this V2RunLaneSummary.


        :param workflow: The workflow of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._workflow = workflow

    @property
    def date_modified(self):
        """Gets the date_modified of this V2RunLaneSummary.  # noqa: E501


        :return: The date_modified of this V2RunLaneSummary.  # noqa: E501
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this V2RunLaneSummary.


        :param date_modified: The date_modified of this V2RunLaneSummary.  # noqa: E501
        :type: datetime
        """

        self._date_modified = date_modified

    @property
    def run_status(self):
        """Gets the run_status of this V2RunLaneSummary.  # noqa: E501


        :return: The run_status of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._run_status

    @run_status.setter
    def run_status(self, run_status):
        """Sets the run_status of this V2RunLaneSummary.


        :param run_status: The run_status of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._run_status = run_status

    @property
    def user_owned_by(self):
        """Gets the user_owned_by of this V2RunLaneSummary.  # noqa: E501


        :return: The user_owned_by of this V2RunLaneSummary.  # noqa: E501
        :rtype: V1pre3UserCompact
        """
        return self._user_owned_by

    @user_owned_by.setter
    def user_owned_by(self, user_owned_by):
        """Sets the user_owned_by of this V2RunLaneSummary.


        :param user_owned_by: The user_owned_by of this V2RunLaneSummary.  # noqa: E501
        :type: V1pre3UserCompact
        """

        self._user_owned_by = user_owned_by

    @property
    def lane_id(self):
        """Gets the lane_id of this V2RunLaneSummary.  # noqa: E501


        :return: The lane_id of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._lane_id

    @lane_id.setter
    def lane_id(self, lane_id):
        """Sets the lane_id of this V2RunLaneSummary.


        :param lane_id: The lane_id of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._lane_id = lane_id

    @property
    def lane_number(self):
        """Gets the lane_number of this V2RunLaneSummary.  # noqa: E501


        :return: The lane_number of this V2RunLaneSummary.  # noqa: E501
        :rtype: int
        """
        return self._lane_number

    @lane_number.setter
    def lane_number(self, lane_number):
        """Sets the lane_number of this V2RunLaneSummary.


        :param lane_number: The lane_number of this V2RunLaneSummary.  # noqa: E501
        :type: int
        """

        self._lane_number = lane_number

    @property
    def lane_status(self):
        """Gets the lane_status of this V2RunLaneSummary.  # noqa: E501


        :return: The lane_status of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._lane_status

    @lane_status.setter
    def lane_status(self, lane_status):
        """Sets the lane_status of this V2RunLaneSummary.


        :param lane_status: The lane_status of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._lane_status = lane_status

    @property
    def library_name(self):
        """Gets the library_name of this V2RunLaneSummary.  # noqa: E501


        :return: The library_name of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._library_name

    @library_name.setter
    def library_name(self, library_name):
        """Sets the library_name of this V2RunLaneSummary.


        :param library_name: The library_name of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._library_name = library_name

    @property
    def fast_q_status(self):
        """Gets the fast_q_status of this V2RunLaneSummary.  # noqa: E501


        :return: The fast_q_status of this V2RunLaneSummary.  # noqa: E501
        :rtype: str
        """
        return self._fast_q_status

    @fast_q_status.setter
    def fast_q_status(self, fast_q_status):
        """Sets the fast_q_status of this V2RunLaneSummary.


        :param fast_q_status: The fast_q_status of this V2RunLaneSummary.  # noqa: E501
        :type: str
        """

        self._fast_q_status = fast_q_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V2RunLaneSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2RunLaneSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
