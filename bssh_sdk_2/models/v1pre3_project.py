# coding: utf-8

"""
    Basespace API

    Basespace REST API  # noqa: E501

    OpenAPI spec version: 5.0.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1pre3Project(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'href_samples': 'str',
        'href_app_results': 'str',
        'href_datasets': 'str',
        'href_base_space_ui': 'str',
        'has_files_in_ica': 'bool',
        'properties': 'V2PropertyContainer',
        'id': 'str',
        'user_owned_by': 'V1pre3UserCompact',
        'href': 'str',
        'name': 'str',
        'description': 'str',
        'date_created': 'datetime',
        'date_modified': 'datetime',
        'has_collaborators': 'bool',
        'is_transfer_pending': 'bool',
        'is_transfer_in_progress': 'bool',
        'is_deleted': 'bool',
        'total_size': 'int',
        'permissions': 'Permissions'
    }

    attribute_map = {
        'href_samples': 'HrefSamples',
        'href_app_results': 'HrefAppResults',
        'href_datasets': 'HrefDatasets',
        'href_base_space_ui': 'HrefBaseSpaceUI',
        'has_files_in_ica': 'HasFilesInIca',
        'properties': 'Properties',
        'id': 'Id',
        'user_owned_by': 'UserOwnedBy',
        'href': 'Href',
        'name': 'Name',
        'description': 'Description',
        'date_created': 'DateCreated',
        'date_modified': 'DateModified',
        'has_collaborators': 'HasCollaborators',
        'is_transfer_pending': 'IsTransferPending',
        'is_transfer_in_progress': 'IsTransferInProgress',
        'is_deleted': 'IsDeleted',
        'total_size': 'TotalSize',
        'permissions': 'Permissions'
    }

    def __init__(self, href_samples=None, href_app_results=None, href_datasets=None, href_base_space_ui=None, has_files_in_ica=None, properties=None, id=None, user_owned_by=None, href=None, name=None, description=None, date_created=None, date_modified=None, has_collaborators=None, is_transfer_pending=None, is_transfer_in_progress=None, is_deleted=None, total_size=None, permissions=None):  # noqa: E501
        """V1pre3Project - a model defined in Swagger"""  # noqa: E501
        self._href_samples = None
        self._href_app_results = None
        self._href_datasets = None
        self._href_base_space_ui = None
        self._has_files_in_ica = None
        self._properties = None
        self._id = None
        self._user_owned_by = None
        self._href = None
        self._name = None
        self._description = None
        self._date_created = None
        self._date_modified = None
        self._has_collaborators = None
        self._is_transfer_pending = None
        self._is_transfer_in_progress = None
        self._is_deleted = None
        self._total_size = None
        self._permissions = None
        self.discriminator = None
        if href_samples is not None:
            self.href_samples = href_samples
        if href_app_results is not None:
            self.href_app_results = href_app_results
        if href_datasets is not None:
            self.href_datasets = href_datasets
        if href_base_space_ui is not None:
            self.href_base_space_ui = href_base_space_ui
        if has_files_in_ica is not None:
            self.has_files_in_ica = has_files_in_ica
        if properties is not None:
            self.properties = properties
        self.id = id
        if user_owned_by is not None:
            self.user_owned_by = user_owned_by
        if href is not None:
            self.href = href
        if name is not None:
            self.name = name
        if description is not None:
            self.description = description
        if date_created is not None:
            self.date_created = date_created
        if date_modified is not None:
            self.date_modified = date_modified
        if has_collaborators is not None:
            self.has_collaborators = has_collaborators
        if is_transfer_pending is not None:
            self.is_transfer_pending = is_transfer_pending
        if is_transfer_in_progress is not None:
            self.is_transfer_in_progress = is_transfer_in_progress
        if is_deleted is not None:
            self.is_deleted = is_deleted
        if total_size is not None:
            self.total_size = total_size
        if permissions is not None:
            self.permissions = permissions

    @property
    def href_samples(self):
        """Gets the href_samples of this V1pre3Project.  # noqa: E501


        :return: The href_samples of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._href_samples

    @href_samples.setter
    def href_samples(self, href_samples):
        """Sets the href_samples of this V1pre3Project.


        :param href_samples: The href_samples of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._href_samples = href_samples

    @property
    def href_app_results(self):
        """Gets the href_app_results of this V1pre3Project.  # noqa: E501


        :return: The href_app_results of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._href_app_results

    @href_app_results.setter
    def href_app_results(self, href_app_results):
        """Sets the href_app_results of this V1pre3Project.


        :param href_app_results: The href_app_results of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._href_app_results = href_app_results

    @property
    def href_datasets(self):
        """Gets the href_datasets of this V1pre3Project.  # noqa: E501


        :return: The href_datasets of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._href_datasets

    @href_datasets.setter
    def href_datasets(self, href_datasets):
        """Sets the href_datasets of this V1pre3Project.


        :param href_datasets: The href_datasets of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._href_datasets = href_datasets

    @property
    def href_base_space_ui(self):
        """Gets the href_base_space_ui of this V1pre3Project.  # noqa: E501


        :return: The href_base_space_ui of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._href_base_space_ui

    @href_base_space_ui.setter
    def href_base_space_ui(self, href_base_space_ui):
        """Sets the href_base_space_ui of this V1pre3Project.


        :param href_base_space_ui: The href_base_space_ui of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._href_base_space_ui = href_base_space_ui

    @property
    def has_files_in_ica(self):
        """Gets the has_files_in_ica of this V1pre3Project.  # noqa: E501


        :return: The has_files_in_ica of this V1pre3Project.  # noqa: E501
        :rtype: bool
        """
        return self._has_files_in_ica

    @has_files_in_ica.setter
    def has_files_in_ica(self, has_files_in_ica):
        """Sets the has_files_in_ica of this V1pre3Project.


        :param has_files_in_ica: The has_files_in_ica of this V1pre3Project.  # noqa: E501
        :type: bool
        """

        self._has_files_in_ica = has_files_in_ica

    @property
    def properties(self):
        """Gets the properties of this V1pre3Project.  # noqa: E501


        :return: The properties of this V1pre3Project.  # noqa: E501
        :rtype: V2PropertyContainer
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this V1pre3Project.


        :param properties: The properties of this V1pre3Project.  # noqa: E501
        :type: V2PropertyContainer
        """

        self._properties = properties

    @property
    def id(self):
        """Gets the id of this V1pre3Project.  # noqa: E501


        :return: The id of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1pre3Project.


        :param id: The id of this V1pre3Project.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def user_owned_by(self):
        """Gets the user_owned_by of this V1pre3Project.  # noqa: E501


        :return: The user_owned_by of this V1pre3Project.  # noqa: E501
        :rtype: V1pre3UserCompact
        """
        return self._user_owned_by

    @user_owned_by.setter
    def user_owned_by(self, user_owned_by):
        """Sets the user_owned_by of this V1pre3Project.


        :param user_owned_by: The user_owned_by of this V1pre3Project.  # noqa: E501
        :type: V1pre3UserCompact
        """

        self._user_owned_by = user_owned_by

    @property
    def href(self):
        """Gets the href of this V1pre3Project.  # noqa: E501


        :return: The href of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this V1pre3Project.


        :param href: The href of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._href = href

    @property
    def name(self):
        """Gets the name of this V1pre3Project.  # noqa: E501


        :return: The name of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1pre3Project.


        :param name: The name of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """Gets the description of this V1pre3Project.  # noqa: E501


        :return: The description of this V1pre3Project.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V1pre3Project.


        :param description: The description of this V1pre3Project.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def date_created(self):
        """Gets the date_created of this V1pre3Project.  # noqa: E501


        :return: The date_created of this V1pre3Project.  # noqa: E501
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this V1pre3Project.


        :param date_created: The date_created of this V1pre3Project.  # noqa: E501
        :type: datetime
        """

        self._date_created = date_created

    @property
    def date_modified(self):
        """Gets the date_modified of this V1pre3Project.  # noqa: E501


        :return: The date_modified of this V1pre3Project.  # noqa: E501
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this V1pre3Project.


        :param date_modified: The date_modified of this V1pre3Project.  # noqa: E501
        :type: datetime
        """

        self._date_modified = date_modified

    @property
    def has_collaborators(self):
        """Gets the has_collaborators of this V1pre3Project.  # noqa: E501


        :return: The has_collaborators of this V1pre3Project.  # noqa: E501
        :rtype: bool
        """
        return self._has_collaborators

    @has_collaborators.setter
    def has_collaborators(self, has_collaborators):
        """Sets the has_collaborators of this V1pre3Project.


        :param has_collaborators: The has_collaborators of this V1pre3Project.  # noqa: E501
        :type: bool
        """

        self._has_collaborators = has_collaborators

    @property
    def is_transfer_pending(self):
        """Gets the is_transfer_pending of this V1pre3Project.  # noqa: E501


        :return: The is_transfer_pending of this V1pre3Project.  # noqa: E501
        :rtype: bool
        """
        return self._is_transfer_pending

    @is_transfer_pending.setter
    def is_transfer_pending(self, is_transfer_pending):
        """Sets the is_transfer_pending of this V1pre3Project.


        :param is_transfer_pending: The is_transfer_pending of this V1pre3Project.  # noqa: E501
        :type: bool
        """

        self._is_transfer_pending = is_transfer_pending

    @property
    def is_transfer_in_progress(self):
        """Gets the is_transfer_in_progress of this V1pre3Project.  # noqa: E501


        :return: The is_transfer_in_progress of this V1pre3Project.  # noqa: E501
        :rtype: bool
        """
        return self._is_transfer_in_progress

    @is_transfer_in_progress.setter
    def is_transfer_in_progress(self, is_transfer_in_progress):
        """Sets the is_transfer_in_progress of this V1pre3Project.


        :param is_transfer_in_progress: The is_transfer_in_progress of this V1pre3Project.  # noqa: E501
        :type: bool
        """

        self._is_transfer_in_progress = is_transfer_in_progress

    @property
    def is_deleted(self):
        """Gets the is_deleted of this V1pre3Project.  # noqa: E501


        :return: The is_deleted of this V1pre3Project.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this V1pre3Project.


        :param is_deleted: The is_deleted of this V1pre3Project.  # noqa: E501
        :type: bool
        """

        self._is_deleted = is_deleted

    @property
    def total_size(self):
        """Gets the total_size of this V1pre3Project.  # noqa: E501


        :return: The total_size of this V1pre3Project.  # noqa: E501
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size):
        """Sets the total_size of this V1pre3Project.


        :param total_size: The total_size of this V1pre3Project.  # noqa: E501
        :type: int
        """

        self._total_size = total_size

    @property
    def permissions(self):
        """Gets the permissions of this V1pre3Project.  # noqa: E501


        :return: The permissions of this V1pre3Project.  # noqa: E501
        :rtype: Permissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this V1pre3Project.


        :param permissions: The permissions of this V1pre3Project.  # noqa: E501
        :type: Permissions
        """

        self._permissions = permissions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1pre3Project, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1pre3Project):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
