# coding: utf-8

"""
    Basespace API

    Basespace REST API  # noqa: E501

    OpenAPI spec version: 5.0.0

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1pre3DirectUploadFile(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'content_type': 'str',
        'size': 'int',
        'relative_path': 'str',
        'etag': 'str',
        'is_deleted': 'bool'
    }

    attribute_map = {
        'content_type': 'ContentType',
        'size': 'Size',
        'relative_path': 'RelativePath',
        'etag': 'Etag',
        'is_deleted': 'IsDeleted'
    }

    def __init__(self, content_type=None, size=None, relative_path=None, etag=None, is_deleted=None):  # noqa: E501
        """V1pre3DirectUploadFile - a model defined in Swagger"""  # noqa: E501
        self._content_type = None
        self._size = None
        self._relative_path = None
        self._etag = None
        self._is_deleted = None
        self.discriminator = None
        if content_type is not None:
            self.content_type = content_type
        if size is not None:
            self.size = size
        if relative_path is not None:
            self.relative_path = relative_path
        if etag is not None:
            self.etag = etag
        if is_deleted is not None:
            self.is_deleted = is_deleted

    @property
    def content_type(self):
        """Gets the content_type of this V1pre3DirectUploadFile.  # noqa: E501


        :return: The content_type of this V1pre3DirectUploadFile.  # noqa: E501
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this V1pre3DirectUploadFile.


        :param content_type: The content_type of this V1pre3DirectUploadFile.  # noqa: E501
        :type: str
        """

        self._content_type = content_type

    @property
    def size(self):
        """Gets the size of this V1pre3DirectUploadFile.  # noqa: E501


        :return: The size of this V1pre3DirectUploadFile.  # noqa: E501
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this V1pre3DirectUploadFile.


        :param size: The size of this V1pre3DirectUploadFile.  # noqa: E501
        :type: int
        """

        self._size = size

    @property
    def relative_path(self):
        """Gets the relative_path of this V1pre3DirectUploadFile.  # noqa: E501


        :return: The relative_path of this V1pre3DirectUploadFile.  # noqa: E501
        :rtype: str
        """
        return self._relative_path

    @relative_path.setter
    def relative_path(self, relative_path):
        """Sets the relative_path of this V1pre3DirectUploadFile.


        :param relative_path: The relative_path of this V1pre3DirectUploadFile.  # noqa: E501
        :type: str
        """

        self._relative_path = relative_path

    @property
    def etag(self):
        """Gets the etag of this V1pre3DirectUploadFile.  # noqa: E501


        :return: The etag of this V1pre3DirectUploadFile.  # noqa: E501
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this V1pre3DirectUploadFile.


        :param etag: The etag of this V1pre3DirectUploadFile.  # noqa: E501
        :type: str
        """

        self._etag = etag

    @property
    def is_deleted(self):
        """Gets the is_deleted of this V1pre3DirectUploadFile.  # noqa: E501


        :return: The is_deleted of this V1pre3DirectUploadFile.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this V1pre3DirectUploadFile.


        :param is_deleted: The is_deleted of this V1pre3DirectUploadFile.  # noqa: E501
        :type: bool
        """

        self._is_deleted = is_deleted

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1pre3DirectUploadFile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1pre3DirectUploadFile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
